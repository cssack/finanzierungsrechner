@page "/"
@using web.app.dataobjectes

<div class="form-floating">
	<textarea class="form-control font-monospace"  @onchange="@(x => Run(x.Value?.ToString() ?? ""))" style="height: 800px">@JsonText</textarea>
</div>


<table class="table table-striped table-sm table-hover">
	<thead>
		<tr>
			<th class="text-end px-3">#</th>
			<th class="text-end px-3">Monat</th>
			@foreach (var generator in  _input.Generators)
			{
				<th class="text-end px-3">@generator.Name</th>
			}
			<th class="text-end px-3">Summe</th>
			<th style="width: 100%"></th>
		</tr>

	</thead>

	<tbody>
		@foreach (var (monatZahlung, index) in  _zahlungenProMonat.Select((x,idx)=>(x, idx)))
		{
			<tr>
				<td class="text-nowrap py-0 px-3">@(index+1)</td>
				<td class="text-nowrap py-0 px-3">@monatZahlung.Monat.ToString("dd.MM.yyyy")</td>
				@foreach (var zahlung in monatZahlung.Zahlungen)
				{
					<td class="text-nowrap py-0 px-3 text-end">
						@if (zahlung != null)
						{
							@zahlung.Betrag.ToString("C")
						}
					</td>
				}
				<td class="text-nowrap py-0 px-3 text-end">
					@monatZahlung.Zahlungen.Sum(x=>x?.Betrag ?? 0).ToString("C")
				</td>
				<td class="text-nowrap py-0 px-3"></td>
			</tr>
		}
	</tbody>
</table>


@code{

	private InputJson _input = new InputJson()
	{
		ReferenceMonth = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1, 0, 0, 0, DateTimeKind.Local).AddMonths(1),
		Generators = new()
		{
			new BankKredit()
			{
				Name = "Bankkredit",
				Beginn = 0,
				AbbruchNach = 0,
				KreditBetrag = 730_000,
				LaufzeitInMonaten = 20 * 12,
				ZinsSatz = 0.055,
			},
			new SfgKredit
			{
				Name = "SFG",
				Beginn = 0,
				AbbruchNach = 0,
				KreditBetrag = 200_000,
				LaufzeitInMonaten = 5 * 12,
				ZinsSatz = 0.046
			}
		}
	};

	private List<ZahlungenProMonat>? _zahlungenProMonat;
	private string JsonText { get; set; }

	protected override void OnInitialized()
	{
		Run(JsonSerializer.Serialize(_input, new JsonSerializerOptions() { WriteIndented = true }));
	}

	public void Run(string jsonText)
	{
		JsonText = jsonText;
		try
		{
			_input = JsonSerializer.Deserialize<InputJson>(JsonText);
			if (_input == null)
				throw new Exception("_input may not be null");
		}
		catch (Exception e)
		{
			Console.WriteLine(e);
			return;
		}

		_zahlungenProMonat = _input.ZahlungenProMonat().ToList();
	}

}
